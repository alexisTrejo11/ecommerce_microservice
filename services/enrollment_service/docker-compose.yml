version: '3.8'

services:
  app:
    build: .
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    depends_on:
      my-sql:
        condition: service_healthy
      mongoDB:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - go-network
    ports:
      - "3006:3000"
    env_file:
      - .env

  my-sql:
    image: mysql:8.0
    container_name: enrollment-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - go-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${DB_USER}", "-p${DB_PASSWORD}"]
      interval: 5s
      timeout: 10s
      retries: 10
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3307:3306"

  mongoDB:
    image: mongo:6.0
    container_name: enrollment-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    volumes:
      - mongodb-data:/data/db
    networks:
      - go-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 10s
      retries: 10
    ports:
      - "27019:27017" 

  redis:
    image: redis:latest
    container_name: enrollment-redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - go-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 10s
      retries: 10
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6378:6379"

volumes:
  mysql-data:
  mongodb-data:

networks:
  go-network:
    driver: bridge